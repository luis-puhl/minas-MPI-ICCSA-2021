<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="369px" preserveAspectRatio="none" style="width:529px;height:369px;" version="1.1" viewBox="0 0 529 369" width="529px" zoomAndPan="magnify"><defs/><g><rect fill="#90EE90" height="350.1321" style="stroke:#CCCCCC;stroke-width:1.0;" width="216" x="21" y="6"/><text fill="#000000" font-family="Ubuntu Mono" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="24" x="117" y="15.1299">Root</text><rect fill="#ADD8E6" height="350.1321" style="stroke:#CCCCCC;stroke-width:1.0;" width="244" x="279" y="6"/><text fill="#000000" font-family="Ubuntu Mono" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="24" x="389" y="15.1299">Leaf</text><rect fill="#E0E0E0" height="95.1326" style="stroke:#2A86E2;stroke-width:1.0;" width="10" x="68" y="77.9998"/><rect fill="#E0E0E0" height="153.9998" style="stroke:#2A86E2;stroke-width:1.0;" width="10" x="177" y="190.1323"/><rect fill="#E0E0E0" height="28" style="stroke:#2A86E2;stroke-width:1.0;" width="10" x="182" y="284.1322"/><rect fill="#E0E0E0" height="61.9999" style="stroke:#2A86E2;stroke-width:1.0;" width="10" x="337" y="158.1324"/><rect fill="#E0E0E0" height="275.1323" style="stroke:#2A86E2;stroke-width:1.0;" width="10" x="460" y="77.9998"/><rect fill="#90EE90" height="73.1326" style="stroke:#000000;stroke-width:2.0;" width="396" x="15" y="92.9998"/><line style="stroke:#2A86E2;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="73" x2="73" y1="50.9998" y2="362.1321"/><line style="stroke:#2A86E2;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="182" x2="182" y1="50.9998" y2="362.1321"/><line style="stroke:#2A86E2;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="342" x2="342" y1="50.9998" y2="362.1321"/><line style="stroke:#2A86E2;stroke-width:1.0;stroke-dasharray:5.0,5.0;" x1="465" x2="465" y1="50.9998" y2="362.1321"/><rect fill="#CCCCCC" height="24.9999" style="stroke:#AAAAAA;stroke-width:1.5;" width="56" x="45" y="24.9999"/><text fill="#000000" font-family="Ubuntu Mono" font-size="11" lengthAdjust="spacing" textLength="42" x="52" y="41.1298">Sampler</text><rect fill="#CCCCCC" height="24.9999" style="stroke:#AAAAAA;stroke-width:1.5;" width="62" x="151" y="24.9999"/><text fill="#000000" font-family="Ubuntu Mono" font-size="11" lengthAdjust="spacing" textLength="48" x="158" y="41.1298">Detector</text><rect fill="#CCCCCC" height="24.9999" style="stroke:#AAAAAA;stroke-width:1.5;" width="74" x="307" y="20.9999"/><rect fill="#CCCCCC" height="24.9999" style="stroke:#AAAAAA;stroke-width:1.5;" width="74" x="303" y="24.9999"/><text fill="#000000" font-family="Ubuntu Mono" font-size="11" lengthAdjust="spacing" textLength="60" x="310" y="41.1298">Classifier</text><rect fill="#CCCCCC" height="24.9999" style="stroke:#AAAAAA;stroke-width:1.5;" width="68" x="431" y="24.9999"/><text fill="#000000" font-family="Ubuntu Mono" font-size="11" lengthAdjust="spacing" textLength="54" x="438" y="41.1298">Model Rec</text><rect fill="#E0E0E0" height="95.1326" style="stroke:#2A86E2;stroke-width:1.0;" width="10" x="68" y="77.9998"/><rect fill="#E0E0E0" height="153.9998" style="stroke:#2A86E2;stroke-width:1.0;" width="10" x="177" y="190.1323"/><rect fill="#E0E0E0" height="28" style="stroke:#2A86E2;stroke-width:1.0;" width="10" x="182" y="284.1322"/><rect fill="#E0E0E0" height="61.9999" style="stroke:#2A86E2;stroke-width:1.0;" width="10" x="337" y="158.1324"/><rect fill="#E0E0E0" height="275.1323" style="stroke:#2A86E2;stroke-width:1.0;" width="10" x="460" y="77.9998"/><polygon fill="#000000" points="448,73.9998,458,77.9998,448,81.9998" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="78" x2="454" y1="77.9998" y2="77.9998"/><text fill="#333333" font-family="Ubuntu Mono" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="6" x="85" y="74.1298">1</text><text fill="#333333" font-family="Ubuntu Mono" font-size="11" lengthAdjust="spacing" textLength="78" x="95" y="74.1298">Initial Model</text><path d="M15,92.9998 L92,92.9998 L92,99.9998 L82,109.9998 L15,109.9998 L15,92.9998 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.0;"/><rect fill="none" height="73.1326" style="stroke:#000000;stroke-width:2.0;" width="396" x="15" y="92.9998"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="32" x="30" y="106.0666">loop</text><path d="M47,115.1326 L47,135.1326 L98,135.1326 L98,125.1326 L88,115.1326 L47,115.1326 " fill="#2A86E2" style="stroke:#1A66C2;stroke-width:1.0;"/><path d="M88,115.1326 L88,125.1326 L98,125.1326 L88,115.1326 " fill="#2A86E2" style="stroke:#1A66C2;stroke-width:1.0;"/><text fill="#000000" font-family="Ubuntu Mono" font-size="11" lengthAdjust="spacing" textLength="30" x="53" y="129.2625">input</text><polygon fill="#000000" points="325,154.1324,335,158.1324,325,162.1324" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="78" x2="331" y1="158.1324" y2="158.1324"/><text fill="#333333" font-family="Ubuntu Mono" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="6" x="85" y="154.2624">2</text><text fill="#333333" font-family="Ubuntu Mono" font-size="11" lengthAdjust="spacing" textLength="36" x="95" y="154.2624">Sample</text><polygon fill="#000000" points="198,186.1323,188,190.1323,198,194.1323" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="192" x2="336" y1="190.1323" y2="190.1323"/><text fill="#333333" font-family="Ubuntu Mono" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="6" x="204" y="186.2623">3</text><text fill="#333333" font-family="Ubuntu Mono" font-size="11" lengthAdjust="spacing" textLength="84" x="214" y="186.2623">Labeled Sample</text><path d="M153,233.1323 L153,253.1323 L210,253.1323 L210,243.1323 L200,233.1323 L153,233.1323 " fill="#2A86E2" style="stroke:#1A66C2;stroke-width:1.0;"/><path d="M200,233.1323 L200,243.1323 L210,243.1323 L200,233.1323 " fill="#2A86E2" style="stroke:#1A66C2;stroke-width:1.0;"/><text fill="#000000" font-family="Ubuntu Mono" font-size="11" lengthAdjust="spacing" textLength="36" x="159" y="247.2623">output</text><line style="stroke:#000000;stroke-width:1.0;" x1="192" x2="234" y1="276.1322" y2="276.1322"/><line style="stroke:#000000;stroke-width:1.0;" x1="234" x2="234" y1="276.1322" y2="289.1322"/><line style="stroke:#000000;stroke-width:1.0;" x1="193" x2="234" y1="289.1322" y2="289.1322"/><polygon fill="#000000" points="203,285.1322,193,289.1322,203,293.1322" style="stroke:#000000;stroke-width:1.0;"/><text fill="#333333" font-family="Ubuntu Mono" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="6" x="199" y="272.2622">4</text><text fill="#333333" font-family="Ubuntu Mono" font-size="11" lengthAdjust="spacing" textLength="108" x="209" y="272.2622">NoveltyDetection()</text><polygon fill="#000000" points="448,340.1321,458,344.1321,448,348.1321" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="182" x2="454" y1="344.1321" y2="344.1321"/><text fill="#333333" font-family="Ubuntu Mono" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="6" x="189" y="340.2621">5</text><text fill="#333333" font-family="Ubuntu Mono" font-size="11" lengthAdjust="spacing" textLength="72" x="199" y="340.2621">Update Model</text><!--MD5=[ea08399586cd017117453fa98acf21cc]
@startuml lifecycle
skinparam Style strictuml
!define LIGHTBLUE
!$FONTNAME = "Ubuntu Mono"
' !$FONTSIZE = 13
skinparam ArrowMessageAlignment center
!includeurl https://raw.githubusercontent.com/Drakemor/RedDress-PlantUML/master/style.puml

autonumber
skinparam ParticipantPadding 20
skinparam BoxPadding 20

box "Root" #LightGreen
' participant Root as r
participant Sampler as s
participant Detector as d
end box
box "Leaf" #LightBlue
collections Classifier as c
participant "Model Rec" as m
' participant Leaf as l
end box

' == Initialization ==
' activate r
' activate l
' r -> d ** : <<create>>
' r -> s ** :call

' l -> c ** : <<create>>
' l -> m ** :call

s - -> m ++ : Initial Model
' s -> d : Initial Model
' c <-> m : Shared Model

' == Running ==
' loop input samples
skinparam SequenceGroupBodyBackgroundColor #LightGreen
group loop 
activate s
note over s : input
s - -> c ++ : Sample
end
deactivate s

' c -> c ++ :NearestCluster()
' deactivate c

c - -> d ++ : Labeled Sample
deactivate c
note over d:output
d -> d : NoveltyDetection()
activate d
deactivate d
d - -> m : Update Model
' activate m
' ... time ...
' |||
deactivate d
' deactivate m


@enduml

@startuml lifecycle
skinparam Style strictuml
skinparam ArrowMessageAlignment center




skinparam stereotypeCBackgroundColor 1a66c2







skinparam backgroundColor fff








skinparam circledCharacter {
  radius 8
  fontSize 11
  fontName Ubuntu Mono
}

skinparam class {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Ubuntu Mono
  arrowFontColor 333
  arrowFontSize 11

  attributeFontColor 333
  attributeFontSize 11
  attributeIconSize 11
}


skinparam actor {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam participant {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam collections {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam SequenceBox{
    backgroundColor e0e0e0
  borderColor cccccc
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}


skinparam interface {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam component {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam node {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam database {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam queue {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}


skinparam usecase {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Ubuntu Mono
  arrowFontColor 333
  arrowFontSize 11
}

skinparam activity {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Ubuntu Mono
  arrowFontColor 333
  arrowFontSize 11
}

skinparam sequence {
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Ubuntu Mono
  arrowFontColor 333
  arrowFontSize 11

  lifeLineBorderColor 2a86e2
  lifeLineBackgroundColor e0e0e0
}

skinparam boundary {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam control {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam entity {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}


skinparam state {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Ubuntu Mono
  arrowFontColor 333
  arrowFontSize 11
  startColor 2a86e2
  endColor 1a66c2
}


skinparam object {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Ubuntu Mono
  arrowFontColor 333
  arrowFontSize 11
}


skinparam note {
    backgroundColor 2a86e2
  borderColor 1a66c2
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam cloud {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
    arrowColor 000
  arrowFontName Ubuntu Mono
  arrowFontColor 333
  arrowFontSize 11
}

skinparam rectangle {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}

skinparam storage {
    backgroundColor ccc
  borderColor aaa
    fontColor 000
  fontName Ubuntu Mono
  fontSize 11
  stereotypeFontColor 333
  stereotypeFontSize 11
}


autonumber
skinparam ParticipantPadding 20
skinparam BoxPadding 20

box "Root" #LightGreen
participant Sampler as s
participant Detector as d
end box
box "Leaf" #LightBlue
collections Classifier as c
participant "Model Rec" as m
end box



s - -> m ++ : Initial Model

skinparam SequenceGroupBodyBackgroundColor #LightGreen
group loop 
activate s
note over s : input
s - -> c ++ : Sample
end
deactivate s


c - -> d ++ : Labeled Sample
deactivate c
note over d:output
d -> d : NoveltyDetection()
activate d
deactivate d
d - -> m : Update Model
deactivate d


@enduml

PlantUML version 1.2021.00(Sun Jan 10 07:25:05 BRT 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>